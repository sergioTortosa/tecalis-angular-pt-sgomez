{"ast":null,"code":"import _createClass from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _possibleConstructorReturn from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _isNativeReflectConstruct from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\";\nimport _getPrototypeOf from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/sergio/Downloads/blk-design-system-angular-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { BehaviorSubject, queueScheduler, Observable } from 'rxjs';\nimport { observeOn, scan, map, distinctUntilChanged } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\nvar MiniState = /*#__PURE__*/function (_BehaviorSubject) {\n  /**\n   * @param {?} _initialState\n   * @param {?} actionsDispatcher$\n   * @param {?} reducer\n   */\n  function MiniState(_initialState, actionsDispatcher$, reducer) {\n    var _this;\n\n    _classCallCheck(this, MiniState);\n\n    _this = _callSuper(this, MiniState, [_initialState]);\n    /** @type {?} */\n\n    var actionInQueue$ = actionsDispatcher$.pipe(observeOn(queueScheduler));\n    /** @type {?} */\n\n    var state$ = actionInQueue$.pipe(scan(\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function (state, action) {\n      if (!action) {\n        return state;\n      }\n\n      return reducer(state, action);\n    }, _initialState));\n    state$.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return _this.next(value);\n    });\n    return _this;\n  }\n\n  _inherits(MiniState, _BehaviorSubject);\n\n  return _createClass(MiniState);\n}(BehaviorSubject);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar MiniStore = /*#__PURE__*/function (_Observable) {\n  /**\n   * @param {?} _dispatcher\n   * @param {?} _reducer\n   * @param {?} state$\n   */\n  function MiniStore(_dispatcher, _reducer,\n  /* tslint:disable-next-line: no-any */\n  state$) {\n    var _this2;\n\n    _classCallCheck(this, MiniStore);\n\n    _this2 = _callSuper(this, MiniStore);\n    _this2._dispatcher = _dispatcher;\n    _this2._reducer = _reducer;\n    /* tslint:disable-next-line: deprecation */\n\n    _this2.source = state$;\n    return _this2;\n  }\n  /**\n   * @template R\n   * @param {?} pathOrMapFn\n   * @return {?}\n   */\n\n\n  _inherits(MiniStore, _Observable);\n\n  return _createClass(MiniStore, [{\n    key: \"select\",\n    value: function select(pathOrMapFn) {\n      /* tslint:disable-next-line: deprecation */\n\n      /** @type {?} */\n      var mapped$ = this.source.pipe(map(pathOrMapFn));\n      return mapped$.pipe(distinctUntilChanged());\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      /** @type {?} */\n      var store = new MiniStore(this._dispatcher, this._reducer, this);\n      /* tslint:disable-next-line: deprecation */\n\n      store.operator = operator;\n      return store;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(action) {\n      this._dispatcher.next(action);\n    }\n    /* tslint:disable-next-line: no-any */\n\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      this._dispatcher.error(err);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      /*noop*/\n    }\n  }]);\n}(Observable);\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  MiniStore.prototype._dispatcher;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  MiniStore.prototype._reducer;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction Action() {}\n\nif (false) {\n  /** @type {?} */\n  Action.prototype.type;\n  /** @type {?|undefined} */\n\n  Action.prototype.payload;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MiniState, MiniStore }; //# sourceMappingURL=ngx-bootstrap-mini-ngrx.js.map","map":null,"metadata":{},"sourceType":"module"}